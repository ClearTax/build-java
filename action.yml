name: Build
description: Build the Java project

inputs:
  java_version:
    description: 'The java version to use'
    default: '17'
  java_distribution:
    description: 'The java distribution to use'
    default: 'zulu'
  maven_version:
    description: 'The maven version to use'
    default: '3.8.3'
  maven_flag:
    description: 'The maven flag to use'
    default: '-T 4C -B --no-transfer-progress'
  token:
    description: 'The GitHub token'
    required: true
  publish_artifacts:
    description: 'Publish the artifacts'
    default: 'false'
  version:
    description: 'The version to build'
    required: true
  default_branch:
    description: 'The default branch to merge the PR into'
    required: false
    default: "${{ github.ref_name }}"
  skip-snapshot:
    description: 'Skip the snapshot creation'
    default: 'true'

outputs:
  version:
    description: 'The version of the artifact'
    value: ${{ steps.set-version.outputs.version }}
  artifact-name:
    description: "The name of artifact it generated"
    value: artifacts-${{github.run_id}}

runs:
  using: 'composite'
  steps:
    - name: Set up JDK ${{ inputs.java_version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ inputs.java_version }}
        server-id: github
        distribution: ${{ inputs.java_distribution }}
    
    - name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven
        restore-keys: |
          ${{ runner.os }}-maven
    
    - name: Set up Maven
      uses: stCarolas/setup-maven@v5
      with:
        maven-version: ${{ inputs.maven_version }}
  
    - name: Setup git
      shell: bash
      run: |
        git config --global user.email "clearci@cleartax.in"
        git config --global user.name "clearci"
        git checkout -b release-temp-${{ inputs.version }}

    - name: Extract and bump development version
      id: version
      shell: bash
      run: |
        TAG="${{ inputs.version }}"
        CLEAN_TAG="${TAG#v}"

        IFS='.' read -r MAJOR MINOR PATCH <<< "$CLEAN_TAG"
        PATCH=$((PATCH + 1))
        NEXT_VERSION="$MAJOR.$MINOR.$PATCH-SNAPSHOT"

        echo "RELEASE_VERSION=$CLEAN_TAG" >> $GITHUB_ENV
        echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_ENV

    - name: Run Maven Release
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        GITHUB_ACTOR: clearci
      run: |
        mvn ${{ inputs.maven_flag }} -DskipTests -Darguments=-DskipTests \
          release:clean release:prepare \
          -DpushChanges=false \
          -DreleaseVersion=${RELEASE_VERSION} \
          -DdevelopmentVersion=${NEXT_VERSION} \
          -DscmCommentPrefix="[ci skip] " \
          -Dtag=temp_${{ inputs.version }} \
          -Dusername=clearci -Dpassword=${{ inputs.token }}


    - name: Deploy Artifacts to Production
      if: ${{ inputs.publish_artifacts == 'true' }}
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        GITHUB_ACTOR: clearci
      run: |
        git checkout temp_${{ inputs.version }}
        mvn -fn deploy ${{ inputs.maven_flag }} -T 4C -DskipTests --file pom.xml
      shell: bash

    - name: Install GH CLI
      if: ${{ inputs.skip-snapshot == 'false' }}
      uses: dev-hanz-ops/install-gh-cli-action@v0.2.1
      with:
        gh-cli-version: 2.74.0

    - name: Create PullRequest for snapshot
      if: ${{ inputs.skip-snapshot == 'false' }}
      id: create_pr
      shell: bash
      env:
        GH_TOKEN: ${{ github.token || inputs.token }}
      run: |
        git push origin release-temp-${{ inputs.version }}
        PR_URL=$(gh pr create \
          --title "[ci skip] bump snapshot after ${{ inputs.version }}" \
          --body "Automated version bump after release." \
          --base ${{ inputs.default_branch }} \
          --head release-temp-${{ inputs.version }})
        echo "pr-url=$PR_URL" >> $GITHUB_OUTPUT

    - name: Merge PR
      if: ${{ inputs.skip-snapshot == 'false' && steps.create_pr.outputs.pr-url != '' }}
      shell: bash
      continue-on-error: true
      env:
        GH_TOKEN: ${{ inputs.token }}
      run: |
        if [[ -n "${{ steps.create_pr.outputs.pr-url }}" ]]; then
          gh pr merge "${{ steps.create_pr.outputs.pr-url }}" --admin --squash --delete-branch || echo "PR merge skipped or failed (non-blocking)"
        else
          echo "No PR URL available to merge."
        fi

    - name: Upload artifacts 
      uses: 'actions/upload-artifact@v4'
      with:
        name: artifacts-${{github.run_id}}
        path: |
          ${{ github.workspace }}/**/*.jar
        retention-days: 1
